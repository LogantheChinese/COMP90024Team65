---
- name: Create master nodes
  openstack.cloud.server:
    cloud: "{{ cloud_name }}"
    name: "master_node_{{ item }}"
    image: "{{ instance_image }}"
    flavor: "{{ node_instance_type }}"
    availability_zone: "{{ availability_zone }}"
    key_name: "{{ key_pair_name }}"
    security_groups: "{{ (security_groups | map(attribute='name') | list) + ['default'] }}"
    volumes:
      - "master_volume_{{ item }}"
    state: present
    auto_floating_ip: false
    wait: true
    timeout: 600
  loop: "{{ range(0, master_node_count) | list }}"
  register: master_node

- name: Create worker nodes
  openstack.cloud.server:
    cloud: "{{ cloud_name }}"
    name: "worker_node_{{ item }}"
    image: "{{ instance_image }}"
    flavor: "{{ node_instance_type }}"
    availability_zone: "{{ availability_zone }}"
    key_name: "{{ key_pair_name }}"
    security_groups: "{{ (security_groups | map(attribute='name') | list) + ['default'] }}"
    volumes:
      - "worker_volume_{{ item }}"
    state: present
    auto_floating_ip: false
    wait: true
    timeout: 600
  loop: "{{ range(0, worker_node_count) | list }}"
  register: worker_node

- name: Create auxiliary nodes
  openstack.cloud.server:
    cloud: "{{ cloud_name }}"
    name: "auxiliary_node_{{ item }}"
    image: "{{ instance_image }}"
    flavor: "{{ auxiliary_node_instance_type }}"
    availability_zone: "{{ availability_zone }}"
    key_name: "{{ key_pair_name }}"
    security_groups: "{{ (security_groups | map(attribute='name') | list) + ['default'] }}"
    auto_floating_ip: false
    wait: true
    timeout: 600
  loop: "{{ range(0, auxiliary_node_count) | list }}"
  register: auxiliary_node


- name: Wait for master nodes to be ready
  wait_for:
    host: "{{ item.server.access_ipv4 }}"
    port: 22
    delay: 10
    timeout: 600
  loop: "{{ master_node.results }}"
  when: item.server is defined

- name: Wait for worker nodes to be ready
  wait_for:
    host: "{{ item.server.access_ipv4 }}"
    port: 22
    delay: 10
    timeout: 600
  loop: "{{ worker_node.results }}"
  when: item.server is defined

- name: Wait for auxiliary nodes to be ready
  wait_for:
    host: "{{ item.server.access_ipv4 }}"
    port: 22
    delay: 10
    timeout: 600
  loop: "{{ auxiliary_node.results }}"
  when: item.server is defined

- name: Add master nodes to inventory
  ansible.builtin.add_host:
    name: "{{ item.server.access_ipv4 }}"
    groups: master_nodes
  loop: "{{ master_node.results }}"
  when: item.server is defined

- name: Add worker nodes to inventory
  ansible.builtin.add_host:
    name: "{{ item.server.access_ipv4 }}"
    groups: worker_nodes
  loop: "{{ worker_node.results }}"
  when: item.server is defined

- name: Add auxiliary nodes to inventory
  ansible.builtin.add_host:
    name: "{{ item.server.access_ipv4 }}"
    groups: auxiliary_nodes
  loop: "{{ auxiliary_node.results }}"
  when: item.server is defined

- name: Add nodes to inventory.ini
  ansible.builtin.template:
    src: inventory.ini.j2
    dest: ./inventory/mycluster/inventory.ini
